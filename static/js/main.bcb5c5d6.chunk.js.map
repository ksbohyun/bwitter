{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authService","firebaseInstance","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialclick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","userObj","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","paddingBottom","display","justifyContent","src","alt","width","height","autoFocus","fontWeight","displayName","faPencilAlt","faTrash","TweetFactory","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","orderBy","onSnapshot","snapshot","tweetArray","docs","map","marginTop","key","Navigation","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLogin","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcb5c5d6.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const authService = firebase.auth();\r\nexport const firebaseInstance = firebase;\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"이메일을 입력해주세요\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"비밀번호를 입력해주세요\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"회원가입\" : \"로그인\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"로그인\" : \"회원가입\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialclick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{\r\n          marginBottom: 30,\r\n        }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialclick} name=\"google\" className=\"authBtn\">\r\n          Google 계정으로\r\n          <br />\r\n          로그인 하기 <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialclick} name=\"github\" className=\"authBtn\">\r\n          Git Hub 계정으로\r\n          <br />\r\n          로그인 하기 <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Tweet = ({ tweetObj, isOwner, userObj }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    if (ok) {\r\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n      await storageService.refFromURL(tweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n      text: newTweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewTweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <div\r\n              style={{\r\n                paddingBottom: \"35px\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <img\r\n                src={\r\n                  tweetObj.attachmentUrl\r\n                    ? tweetObj.attachmentUrl\r\n                    : \"http://www.visioncyber.co.kr/rtimages/n_sub/no_detail_img.gif\"\r\n                }\r\n                alt={tweetObj.attachmentUrl}\r\n                width=\"100px\"\r\n                height=\"100px\"\r\n                className=\"nweet__div\"\r\n              />\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"내용을 입력해주세요.\"\r\n              value={newTweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"수정\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            취소\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4 style={{ fontWeight: \"bolder\" }}>{userObj.displayName}</h4>\r\n          <br />\r\n          <h4>{tweetObj.text}</h4>\r\n          <div>\r\n            {tweetObj.attachmentUrl && (\r\n              <img src={tweetObj.attachmentUrl} alt={tweetObj.attachmentUrl} />\r\n            )}\r\n          </div>\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon\r\n                  icon={faPencilAlt}\r\n                  style={{ color: \"#04aaff\" }}\r\n                />\r\n              </span>\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} style={{ color: \"#f76045\" }} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TweetFactory = ({ userObj }) => {\r\n  const [tweet, setTweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    if (tweet === \"\" && attachment === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const tweetObj = {\r\n      text: tweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"tweets\").add(tweetObj);\r\n    setTweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setTweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onclearAttachment = () => {\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={tweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"무슨 일이 일어나고 있나요?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>사진 추가</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            alt={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onclearAttachment}>\r\n            <span>사진 취소</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TweetFactory;\r\n","import Tweet from \"components/Tweet\";\r\nimport TweetFactory from \"components/TweetFactory\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"tweets\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const tweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setTweets(tweetArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {tweets.map((tweet) => (\r\n          <Tweet\r\n            userObj={userObj}\r\n            key={tweet.id}\r\n            tweetObj={tweet}\r\n            isOwner={tweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li style={{ marginLeft: 40 }}>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {/* {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"} */}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          value={newDisplayName}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"닉네임\"\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"프로필 수정\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        로그아웃\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ isLogin, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLogin && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLogin ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          userObj={userObj}\n          isLogin={Boolean(userObj)}\n        />\n      ) : (\n        \"초기화 중...\"\n      )}\n      {/* <footer>&copy;{new Date().getFullYear()} twitter-clone</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}